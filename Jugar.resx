<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>